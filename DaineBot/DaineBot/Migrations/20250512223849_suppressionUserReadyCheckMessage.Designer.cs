// <auto-generated />
using System;
using DaineBot.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DaineBot.Migrations
{
    [DbContext(typeof(DaineBotDbContext))]
    [Migration("20250512223849_suppressionUserReadyCheckMessage")]
    partial class suppressionUserReadyCheckMessage
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DaineBot.Models.AdminRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Guild")
                        .HasColumnType("numeric(20,0)");

                    b.PrimitiveCollection<decimal[]>("RoleList")
                        .IsRequired()
                        .HasColumnType("numeric(20,0)[]");

                    b.HasKey("Id");

                    b.ToTable("AdminRoles");
                });

            modelBuilder.Entity("DaineBot.Models.RaidSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Day")
                        .HasColumnType("integer");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("interval");

                    b.Property<int>("Hour")
                        .HasColumnType("integer");

                    b.Property<int>("Minute")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ReplacedSession")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ReportCode")
                        .HasColumnType("text");

                    b.Property<int>("RosterId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RosterId");

                    b.ToTable("RaidSessions");
                });

            modelBuilder.Entity("DaineBot.Models.ReadyCheck", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.PrimitiveCollection<decimal[]>("AcceptedPlayers")
                        .IsRequired()
                        .HasColumnType("numeric(20,0)[]");

                    b.Property<bool>("Complete")
                        .HasColumnType("boolean");

                    b.PrimitiveCollection<decimal[]>("DeniedPlayers")
                        .IsRequired()
                        .HasColumnType("numeric(20,0)[]");

                    b.Property<bool>("ReminderSent")
                        .HasColumnType("boolean");

                    b.Property<int>("SessionId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SessionId")
                        .IsUnique();

                    b.ToTable("ReadyChecks");
                });

            modelBuilder.Entity("DaineBot.Models.ReadyCheckMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CheckId")
                        .HasColumnType("integer");

                    b.Property<decimal>("MessageId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("CheckId");

                    b.ToTable("ReadyCheckMessages");
                });

            modelBuilder.Entity("DaineBot.Models.Roster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Guild")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("RaidLeader")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("RosterChannel")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("RosterRole")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("TimeZoneId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Rosters");
                });

            modelBuilder.Entity("DaineBot.Models.TmpRaidSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Day")
                        .HasColumnType("integer");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.ToTable("TmpSessions");
                });

            modelBuilder.Entity("DaineBot.Models.RaidSession", b =>
                {
                    b.HasOne("DaineBot.Models.Roster", "Roster")
                        .WithMany("Sessions")
                        .HasForeignKey("RosterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Roster");
                });

            modelBuilder.Entity("DaineBot.Models.ReadyCheck", b =>
                {
                    b.HasOne("DaineBot.Models.RaidSession", "Session")
                        .WithOne("Check")
                        .HasForeignKey("DaineBot.Models.ReadyCheck", "SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Session");
                });

            modelBuilder.Entity("DaineBot.Models.ReadyCheckMessage", b =>
                {
                    b.HasOne("DaineBot.Models.ReadyCheck", "Check")
                        .WithMany("Messages")
                        .HasForeignKey("CheckId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Check");
                });

            modelBuilder.Entity("DaineBot.Models.RaidSession", b =>
                {
                    b.Navigation("Check");
                });

            modelBuilder.Entity("DaineBot.Models.ReadyCheck", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("DaineBot.Models.Roster", b =>
                {
                    b.Navigation("Sessions");
                });
#pragma warning restore 612, 618
        }
    }
}
